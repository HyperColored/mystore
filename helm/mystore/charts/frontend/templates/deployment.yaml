apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deploymentName }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: "prod-store"
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: helm
    helm.sh/chart: "mystore"
    app.kubernetes.io/component: {{ .Chart.Name }}
    app.kubernetes.io/part-of: mystore
    env: production 
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.global.revisionHistoryLimit }} 
  strategy:
    type: {{ .Values.global.strategyType }}
    rollingUpdate:
      maxUnavailable: {{ .Values.global.maxUnavailabe }}
      maxSurge: {{ .Values.global.maxSurge }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
        - name: {{ .Values.deploymentName }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          volumeMounts:
          - name: nginx-conf
            mountPath: {{ .Values.volumeMounts.mountPath }}
          ports:
            - name: {{ .Values.deploymentName }}
              containerPort: {{ .Values.ports.containerPort }}
          resources:
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
      imagePullSecrets:
        - name: gitlab-registry-auth
      volumes:
      - name: nginx-conf
        configMap:
          name: {{ .Values.configMap }}
          items:
            - key: nginx.conf
              path: nginx.conf
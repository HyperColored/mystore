variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
    - test
    - build
    - release
include:
    - template: Security/SAST.gitlab-ci.yml

backend-unittest:
  stage: test
  image: golang:alpine
  before_script:
    - apk add build-base
  script:
    - cd backend
    - go test -v ./...

sonarqube-backend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd backend
    - "sonar-scanner \
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_BACK} \
      -Dsonar.sources=. \
      -Dsonar.host.url=${SONAR_URL} \
      -Dsonar.login=${SONAR_LOGIN_BACK}"

build-backend-artifact:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_NAME}-BACK-${VERSION}
    paths:
      - backend
  before_script:
    - apt update
    - apt install golang -y
  script:
    - cd backend/cmd/api
    - go mod download
    - go build -o diplom-backend
  needs:
    - backend-unittest
    - sonarqube-backend-sast
  artifacts:
    paths:
      - $CI_PROJECT_DIR/backend/cmd/api/diplom-backend

build-backend-image:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend"
      --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/diplom-backend:${CI_COMMIT_SHORT_SHA}"
      --destination "${CI_REGISTRY_IMAGE}/diplom-backend:latest"
      --build-arg VERSION=$VERSION
      --cache=true

upload-backend-package:
    stage: release
    only:
        changes:
            - backend/**/*
    needs:
        - build-backend-artifact
    script:
        - cd $CI_PROJECT_DIR/backend/cmd/api/ && ls -lah
        - tar czvf diplom-backend-${VERSION}.tar.gz diplom-backend
        - >
            curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}"
            --upload-file diplom-backend-${VERSION}.tar.gz
            ${NEXUS_BACK}/${VERSION}/diplom-backend-${VERSION}.tar.gz